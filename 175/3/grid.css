* { /*remove existing styling*/
  margin: 0;
  padding: 0;
  scroll-behavior: smooth; /*makes jumping between ids less jarring*/
}

/*navigation bar styling */

nav { /*sets position to below immediate viewframe*/
  position: absolute;
  font-size: 24px;
  background-color: #aaa;
  border-bottom: 2px solid #f6e0e0;
  float: left;
  z-index: 5;
  top: 100vh;
  width: 100%;
}

nav > ul { /*makes a flexbox for the navbar and centers it, aligns text with the icon by center*/
  display: flex;
  justify-content: center;
  align-items: center;
}

nav > ul > li { /*removes bullet points*/
  padding: 5px;
  list-style: none;
}

nav > ul> li> a { /*text styling for nav links, gets rid of ugly link styling*/
  letter-spacing: 1.8px;
  color: #f6e0e0;
  text-decoration: none;
}

a:hover { /* makes nav text white and glowy on hover*/
  color: #fff;
  text-shadow: 2px 0 8px #fff;
}

#icon { /*makes icon overlap a bit*/
  margin: -50% 10%;
  height: 60px;
}

.sticky { /*borrowed code controlled and sourced in script.js file, makes navbar fixed when page reaches a certain point by adding this class*/
  position: fixed !important;
  z-index: 20 !important;
  top: 0 !important;
  width: 100%;
}

.arrow { /*uses border and padding on an empty div to make an arrow*/
  position: absolute;
  bottom: 2vh;
  left: 48.7vw;
  border: solid #aaa;
  border-width: 0 .4vw .4vw 0;
  padding: 1.3vw;
  display: inline-block;
  transform: rotate(45deg);
}

/*grid setup*/

body { /*set up a grid, each row is a display length page divided into 3 equal columns*/
  display: grid;
  grid-template: 100vh / repeat(3, 1fr);
  font-family: 'Cormorant', serif;
  font-size: 22px;
}

/*main page styling*/

div.landing { /*designates first row and all colums for first "page". background is two stacked images, these will eventaully be animated, resizes bgimage responsively based on window height.*/
  grid-column: 1 / 4;
  grid-row: 1 / 2;
  background: url("images/demo_background.png") center 85% no-repeat, url("images/moon_demo.png") center -60% no-repeat;
  background-size: 165vh, 80vh;
}

/*title styling*/

#landheader { /*puts title headers into a flexbox, will expand on this later when background is done*/
  margin-top: 2vh;
  line-height: 75%;
  text-align: center;
  display: flex;
  flex-wrap: wrap;
  flex-direction: column;
}

h1 { /*styles font of main title. Opacity will matter more when bg is properly painted. Not totally sold on this font, but fine for now.*/
  font-family: 'Dancing Script', cursive;
  font-size: 40px;
  color: #3d3f4e;
  opacity: 0.8;
}

h2 { /*styling for second line of header, just a decoration now, but probably will have better text when I can*/
  color: #bbb;
}

/*gallery section styling*/

section.art { /*styling for gallery section, used grid template area styling because it's easiest to change layout quickly or swap things out (in my opinion) because I want a specific orientation of images. Hides lower section of grid by default and displays button*/
  box-sizing: border-box;
  grid-column: 1 / 4;
  grid-row: 2 / 3;
  display: grid;
  width: 100%;
  justify-content: center;
  grid-template-areas:
    "t t t"
    "i1 i1 i1"
    "i1 i1 i1"
    "i11 i11 i11"
    "i11 i11 i11"
    "i9 i9 i9"
    "i9 i9 i9"
    "i8 i8 i8"
    "i8 i8 i8"
    "i10 i10 i14"
    "i10 i10 i14"
    "i7 i13 i13"
    "i7 i13 i13"
    ". b ."
    "i5 i5 i12"
    "i2 i2 i12"
    "i6 i3 i4"
    "i6 i3 i4";
  grid-template-rows: 15vh repeat(12, 40vh) 30px repeat(4, 0);
  grid-template-columns: repeat(3, 1fr);
  padding: 0 5% 0 5%;
  font-size: 2vh;
}

section.artexpand { /*I know this is the messiest, most unnecessary code ever, but I am so tired of messing with this part, basically this just gets rid of button and allows lower grid spaces to have height when see more button is pressed, really awkward, I know, but it works. The above class is swapped with this one with javascript on button blick*/
  box-sizing: border-box;
  grid-column: 1 / 4;
  grid-row: 2 / 3;
  display: grid;
  width: 100%;
  justify-content: center;
  grid-template-areas:
    "t t t"
    "i1 i1 i1"
    "i1 i1 i1"
    "i11 i11 i11"
    "i11 i11 i11"
    "i9 i9 i9"
    "i9 i9 i9"
    "i8 i8 i8"
    "i8 i8 i8"
    "i10 i10 i14"
    "i10 i10 i14"
    "i7 i13 i13"
    "i7 i13 i13"
    "i5 i5 i12"
    "i2 i2 i12"
    "i6 i3 i4"
    "i6 i3 i4";
  grid-template-rows: 15vh repeat(12, 40vh) repeat(4, 30vh);
  grid-template-columns: repeat(3, 1fr);
  padding: 0 5% 0 5%;
  font-size: 2vh;
}

/*desat high contrast images to avoid unwanted clash*/
.desat {
  filter: saturate(50%);
}

.lowdesat {
  filter: saturate(70%)
}

/*popout icon styling, this is not very noticeable and needs work*/
section.art > p > a > img,
section.artexpand > p > a > img {
  width: 4vh;
  float: right;
}

/*text overlay styling, makes a gradient from bottom of image when hovered over to show some info about the image, realize the lack of symmetry with video items is weird, would like to fix that eventually, but right now it would make videos unplayable. Opactiy is 0 so it's hidden unless hovered*/
p.overlay {
  opacity: 0;
  color: #F6E0E0 !important;
  background-image: linear-gradient(to bottom, rgba( 0, 0, 0, 0), rgba( 0, 0, 0, 0), rgba(150, 150, 150, 0.8));
  position: relative;
  display: flex;
  align-items: flex-end;
  justify-content: flex-end;
}

/* makes flexboxes work with breakpoints by putting it in a div*/
div.responsiveiframe {
  border: none;
  position: relative;
  height: 100%;
  overflow: hidden;
}

/*position can be absolute because container is relative and maintains place in grid*/
div.responsiveiframe > iframe {
  border: none;
  position: absolute;
  top:0;
  left: 0;
  width: 100%;
  height: 100%;
}

/*styling for title of this page, same as main title but designates grid area*/
#arttitle {
  line-height: 75%;
  margin-top: 10vh;
  grid-area: t;
  width: 100%;
  position: relative;
  text-align: center;
}

/*object fit causes view to center over abdomen for this image, changes to face view*/
#img14 {
  object-position: 0 40%;
}

/*grid image styling, object fit lets things line up nicely with the grid boxes, width and height prevents blank spaces when resizing window*/
#img1, #img3, #img4, #img5, #img6, #img7, #img14 {
  position: relative;
  object-fit: cover;
  width: 100%;
  max-height: 100%;
}

/*same as above except for horizontal items*/
#img6, #img12, #img7 {
  position: relative;
  object-fit: cover;
  height: 100%;
  max-width: 100%;
}

/*styling for iframes*/
#img8, #img9, #img10, #img13 {
  border: none;
  object-fit: cover;
  width: 100%;
  height: 100%;
}

/*designates grid areas*/
#img1, #text1 {
  grid-area: i1;
}

#img2, #text2 {
  grid-area: i2;
}

#img3, #text3 {
  grid-area: i3;
}

#img4, #text4 {
  grid-area: i4;
}

#img5, #text5 {
  grid-area: i5;
}

#img6, #text6 {
  grid-area: i6;
}

#img7, #text7 {
  grid-area: i7;
}

#img8 {
  grid-area: i8;
}

#img9 {
  grid-area: i9;
}

#img10 {
  grid-area: i10;
}

#img11, #text11 {
  grid-area: i11;
}

#img12, #text12 {
  grid-area: i12;
}

#img13 {
  grid-area: i13;
}

#img14, #text14 {
  grid-area: i14;
}

/*show image text overlays on mouseover*/
#img1:hover ~ #text1, #img1 ~ #text1:hover,
#img2:hover ~ #text2, #img2 ~ #text2:hover,
#img3:hover ~ #text3, #img3 ~ #text3:hover,
#img4:hover ~ #text4, #img4 ~ #text4:hover,
#img5:hover ~ #text5, #img5 ~ #text5:hover,
#img6:hover ~ #text6, #img6 ~ #text6:hover,
#img7:hover ~ #text7, #img7 ~ #text7:hover,
#img11:hover ~ #text11, #img11 ~ #text11:hover,
#img12:hover ~ #text12, #img12 ~ #text12:hover,
#img14:hover ~ #text14, #img14 ~ #text14:hover  {
  opacity: 1;
}

/*flexbox specific styling for the image triads*/
#img2, #img11 {
  object-fit: cover;
  max-width: 100% !important;
  max-height: 100%;
  display: flex;
}

/*flexbox styling for images within the image triads*/
#img2 > img, #img11 > img {
  box-sizing: border-box;
  height: auto;
  width: 33.33%; /*it feels like this is wrong*/
  object-fit: cover;
}

/*see more button styling, would like to change width, but it ignores sizing and messing with padding/margins screws up the page because of total being greater than 100%, unsure how to manage this*/
#more {
  font-family: 'Cormorant', serif;
  letter-spacing: 5px;
  border-radius: 90px;
  border: 2px solid #f6e0e0;
  position: relative;
  z-index: 10;
  grid-area: b;
}

/*button is subtle so changed to a pointer to make interactiveness more forward*/
#more:hover {
  cursor: pointer;
}

/*added and removed with Javascript to text sections and the button to make see more button work*/
.hide {
  font-size: 0px;
  width: 0px;
  height: 0px;
  opacity: 0 !important;
}

/*about section styling, same as above more or less, added margins to make text look less sparse*/
section.about {
  margin: 0 20% 0 20%;
  height: 100vh;
  grid-column: 1 / 4;
  grid-row: 3 / 4;
}

/*flexbox for image and text*/
#abouttext {
  padding-top: 10vh;
  display: flex;
}

/*styling for about section title*/
#abouttitle {
  line-height: 75%;
  margin-top: 10vh;
  width: 100%;
  position: relative;
  text-align: center;
}

/*styling for about section font*/
#intro {
  background-image: linear-gradient(to bottom, white, lightgray);
  color: #3d3f4e;
  text-align: justify;
  font-size: 2.5vh;
  letter-spacing: .8px;
  width: 50%;
  padding-top: 15%;
}

/*styling for decorative image on about section*/
#intropic {
  object-fit: contain;
  width: 50%;
}

/*contact section styling and grid designation, height at 75 for color block at bottom*/
section.contact {
  margin-top: 100px;
  height: 75vh !important;
  grid-column: 1 / 4;
  grid-row: 4 / 5;
  overflow: hidden;
}

/*styling for contact section text*/
section.contact > p {
  margin: 5% 0 0 0;
  font-size: 2.5vh;
  letter-spacing: .8px;
  word-spacing: 50px;
  width: 100%;
  text-align: center;
}

/*unsure if b tag counts as inline styling, but I like it more than font weight */
b {
  color: gray;
}

/*title styling like the ones above, probably should make this one class tag with about styling*/
#contacttitle {
  line-height: 75%;
  margin-top: 10vh;
  width: 100%;
  position: relative;
  text-align: center;
}

/*flexbox for social media icons, icons are borrowed and sourced in HTML doc, will make my own after finishing the rest of my page's illustrations*/
#socials {
  width: 100%;
  display: flex;
  text-align: center;
  justify-content: center;

}

/*resizing icons*/
#socials > a > img {
  width: 5vh;
}

/*footer section styling*/

footer {
  width: 100%;
  height: 25vh;
  background-color: #3d3f4e;
  grid-column: 1 / 4;
  grid-row: 5 / 7;
  overflow: hidden;
  }

@media all and (max-width: 900px) {
  section.art {
    margin: 0 !important;
    padding: 0 !important;
    grid-template-rows: 20vh repeat(8, 20vh) 10vh repeat(6, 0vh) !important;
    grid-template-columns: 100vw;
    grid-template-areas:
      "t"
      "i1 "
      "i11"
      "i9"
      "i8"
      "i10"
      "i14"
      "i7"
      "i13"
      "b"
      "i5"
      "i12"
      "i2"
      "i6"
      "i3"
      "i4" !important;
  }

  #more {
    height: 5vh !important;
  }

  section.artexpand {
    margin: 0 !important;
    padding: 0 !important;
    grid-template-rows: 20vh repeat(8, 20vh) repeat(6, 15vh) !important;
    grid-template-columns: 100vw;
    grid-template-areas:
      "t"
      "i1 "
      "i11"
      "i9"
      "i8"
      "i10"
      "i14"
      "i7"
      "i13"
      "i5"
      "i12"
      "i2"
      "i6"
      "i3"
      "i4" !important;
  }

  #img5, #img1, #img3, #img7, #img12, #img4, #img14 {
    max-width: 100% !important;
    height: 100% !important;
  }
  #img8, #img9, #img10, #img12, #img13 {
    width: 100% !important;
    max-height: 100% !important;
  }

  #img1 {
    object-position: 0 25%;
  }

  #img4 {
    object-position: 0 25%;
  }

  #img3 {
    object-position: 0 22%;
  }

  #img5 {
    object-position: 0 25%;
  }

  #img6 {
    object-position: 0 28%;
  }

  #img7 {
    object-position: 0 8%;
  }

  #img12 {
    object-position: 0 18%;
  }

  #img14 {
    object-position: 0 18%;
  }



  section.about {
    margin: 0 2% 0 2%;
  }

  .arrow {
    border-width: 0 .5vw .5vw 0;
  }

  #socials > a > img {
    width: 10vh;
  }

}
